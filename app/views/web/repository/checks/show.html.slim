.container.border.p-4.rounded.mt-4
  h1 Check #{@check.id}

  p
  strong = "#{t('check.created_at')} :"
  span(style='margin-left: 10px; font-weight: normal;') = @check.created_at.strftime('%d %B %Y, %H:%M')

  p
  strong = "#{t('check.status')} :"
  span(style='margin-left: 10px; font-weight: normal;') = @check.aasm_state.capitalize

  p
  strong = "#{t('check.passed')} :"
  span(style='margin-left: 10px; font-weight: normal;') = @check.passed?

  p
  strong = "#{t('errors.count')} :"
  span(style='margin-left: 10px; font-weight: normal;') = @check.linter_errors.count

  p
  strong = "#{t('repository.commit')} :"
  span(style='margin-left: 10px; font-weight: normal;') = link_to @check.commit_id, "https://github.com/#{@repository.full_name}/commit/#{@check.commit_id}"

  .container.border.p-4.rounded.mt-4
    table.table
      thead
        tr
          th = t('rubocop.message')
          th = t('rubocop.cop')
          th = t('rubocop.string')

      tbody
        - @check.linter_errors.group_by { |error| error.file.split(':').first }.each do |file, errors|
          tr
            td colspan="4"
              - file_path = file.sub('app/tmp/repos/1', '')
              - github_url = "https://github.com/#{@repository.full_name}/blob/#{@check.commit_id}/#{file_path}"
              = link_to file, github_url
          - errors.each do |error|
            tr
              td = error.message
              td = error.offense_code
              td = "#{error.line} : #{error.column}"
  p
  = link_to t('repository.back'), repository_path(@repository), class: 'btn btn-primary'
